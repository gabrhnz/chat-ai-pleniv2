#!/usr/bin/env node

/**
 * Add Conversational FAQs
 * 
 * Agrega FAQs con lenguaje m√°s natural y conversacional
 */

import { createClient } from '@supabase/supabase-js';
import * as embeddingsLocal from '../src/services/embeddings.service.js';
import * as embeddingsCloud from '../src/services/embeddings.service.cloud.js';
import config from '../src/config/environment.js';
import dotenv from 'dotenv';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const rootDir = path.join(__dirname, '..');

dotenv.config({ path: path.join(rootDir, '.env') });

const embeddingsService = config.server.isProduction ? embeddingsCloud : embeddingsLocal;
const { generateEmbeddingsBatch } = embeddingsService;

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

// FAQs conversacionales
const conversationalFAQs = [
  {
    question: "¬øCu√°les hay?",
    answer: "**16 carreras**: 6 ingenier√≠as y 10 licenciaturas cient√≠ficas. üéì ¬øCu√°l √°rea te interesa?",
    category: "carreras",
    keywords: ["cu√°les", "lista", "carreras"]
  },
  {
    question: "¬øQu√© carreras hay?",
    answer: "**16 programas**: Ingenier√≠as (IA, Ciberseguridad, Rob√≥tica) y Licenciaturas (F√≠sica, Biotecnolog√≠a, Nanotecnolog√≠a). üéì ¬øCu√°l prefieres?",
    category: "carreras",
    keywords: ["qu√© carreras", "lista carreras"]
  },
  {
    question: "Dime las carreras",
    answer: "Tenemos **ingenier√≠as** (IA, Ciberseguridad, Rob√≥tica, Electromedicina, Petroqu√≠mica, Biomateriales) y **licenciaturas** cient√≠ficas. üìö ¬øCu√°l te interesa?",
    category: "carreras",
    keywords: ["dime", "lista", "carreras"]
  },
  {
    question: "¬øCu√°les son las carreras?",
    answer: "**16 carreras** en tecnolog√≠a y ciencias: Ingenier√≠as y Licenciaturas. üéì ¬øQuieres detalles de alguna?",
    category: "carreras",
    keywords: ["cu√°les son", "carreras"]
  },
  {
    question: "Quiero saber las carreras",
    answer: "Ofrecemos **6 ingenier√≠as** y **10 licenciaturas** en √°reas cient√≠ficas. üî¨ ¬øCu√°l √°rea prefieres?",
    category: "carreras",
    keywords: ["quiero saber", "carreras"]
  },
  {
    question: "¬øQu√© puedo estudiar?",
    answer: "Puedes estudiar **ingenier√≠as** (IA, Rob√≥tica, Ciberseguridad) o **licenciaturas** (F√≠sica, Biotecnolog√≠a, Nanotecnolog√≠a). üìñ ¬øCu√°l te gusta?",
    category: "carreras",
    keywords: ["qu√© puedo estudiar", "opciones"]
  },
  {
    question: "Mu√©strame las carreras",
    answer: "**Ingenier√≠as**: IA, Ciberseguridad, Rob√≥tica, Electromedicina, Petroqu√≠mica, Biomateriales. **Licenciaturas**: 10 programas cient√≠ficos. üéì ¬øCu√°l?",
    category: "carreras",
    keywords: ["mu√©strame", "lista"]
  },
  {
    question: "¬øQu√© opciones de carrera tienen?",
    answer: "**16 opciones** entre ingenier√≠as tecnol√≥gicas y licenciaturas cient√≠ficas. üöÄ ¬øTecnolog√≠a o ciencias?",
    category: "carreras",
    keywords: ["opciones", "carrera"]
  }
];

async function addConversationalFAQs() {
  console.log('üöÄ Adding Conversational FAQs\n');
  console.log(`üìã Found ${conversationalFAQs.length} FAQs to add\n`);
  
  // Generate embeddings
  console.log('üî¢ Generating embeddings...');
  const questions = conversationalFAQs.map(faq => faq.question);
  const embeddings = await generateEmbeddingsBatch(questions);
  console.log('‚úÖ Embeddings generated\n');
  
  // Prepare FAQs
  const faqsToInsert = conversationalFAQs.map((faq, idx) => ({
    question: faq.question,
    answer: faq.answer,
    category: faq.category,
    keywords: faq.keywords || [],
    metadata: {
      source: 'conversational',
      added_at: new Date().toISOString(),
    },
    embedding: embeddings[idx],
    created_by: 'conversational',
    is_active: true,
  }));
  
  // Insert
  const { data, error } = await supabase
    .from('faqs')
    .insert(faqsToInsert)
    .select();
  
  if (error) {
    console.error('‚ùå Error:', error.message);
    process.exit(1);
  }
  
  console.log(`‚úÖ Added ${data.length} conversational FAQs\n`);
}

addConversationalFAQs()
  .then(() => process.exit(0))
  .catch(error => {
    console.error('‚ùå Error:', error);
    process.exit(1);
  });
